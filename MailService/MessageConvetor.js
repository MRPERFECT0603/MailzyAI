
//text/plain type email

// const nodeBase64 = require('nodejs-base64-converter');

// const mailContent = "RWxlYXJubWFya2V0cyBXZWxjb21lIEVtYWlsIERpZCBZb3UgS25vdz8_DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIEluZm9zeXMgVGVjaG5vbG9naWVzIElQTyB3YXMgdW5kZXJzdWJzY3JpYmVkDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW4gSnVuZSAxOTkzLCBJbmZvc3lzIGxhdW5jaGVkIGl0cyBJUE8gd2l0aCBzaGFyZXMgcHJpY2VkIGF0IFJzIDk1IGVhY2guIEl0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlkbid0IGF0dHJhY3QgZW5vdWdoIGJ1eWVycyBpbml0aWFsbHksIHNvIE1vcmdhbiBTdGFubGV5IHN0ZXBwZWQgaW4gYW5kIGJvdWdodA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEzJSBvZiB0aGUgc2hhcmVzLsKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2hlbiB0aGUgc3RvY2sgbGlzdGVkLCBpdCB3YXMgcHJpY2VkIGF0IFJzIDE0NSwgZ2l2aW5nIGEgZ2FpbiBvZiBvdmVyIDUyJS4gSWYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5b3UgaGFkIGludmVzdGVkIFJzIDksNTAwIGluIHRoZSBJUE8sIGl0IHdvdWxkIG5vdyBiZSB3b3J0aCBvdmVyIFJzIDIgY3JvcmUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGx1cyB5b3Ugd291bGQgaGF2ZSBlYXJuZWQgbmVhcmx5IFJzIDIwIGxha2ggaW4gZGl2aWRlbmRzLg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN1emxvbi0gVGhlIFBpb25lZXIgT2YgV2luZCBFbmVyZ3kNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdXpsb24sIGEgbGVhZGluZyBJbmRpYW4gd2luZCB0dXJiaW5lIG1hbnVmYWN0dXJlciwgd2FzIHRoZSBwaW9uZWVyIGluIGJyaW5naW5nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZCBlbmVyZ3kgdG8gSW5kaWEgaW4gMTk5NS4gIFRoZXkgaW5zdGFsbGVkIHRoZSBjb3VudHJ5J3MgZmlyc3QtZXZlciBjb21tZXJjaWFsIHdpbmQgdHVyYmluZSENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTb21lIEJpZyBOZXdzIFRoaXMgV2VlayENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTRUJJIHN1c3BlY3RzIGZyb250LXJ1bm5pbmcgYXQgIFF1YW50IE11dHVhbA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGdW5kICwgd2l0aCBleGVjdXRpdmVzIHBvc3NpYmx5DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVha2luZyB0cmFkZSBkZXRhaWxzLiBSYWlkcyBvbiBRdWFudCdzIG9mZmljZXMgbGVkIHRvIHRoZSBzZWl6dXJlIG9mIGRpZ2l0YWwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VzIHRvIHVuY292ZXIgdGhlc2UgbGVha3MuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyZXNzZWQgaW52ZXN0b3JzIG9mIFF1YW50IE11dHVhbCBGdW5kIGhhdmUgd2l0aGRyYXduIGFyb3VuZCBScyAxLDQwMCBjcm9yZSBpbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1c3QgMyBkYXlzIGR1ZSB0byBTZWJpJ3MgaW52ZXN0aWdhdGlvbiBpbnRvIGEgZnJvbnQtcnVubmluZyBjYXNlLiBNYW55DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXN0b3JzIGluIGl0cyBzY2hlbWVzIGFyZSBub3cgY29uY2VybmVkIGFib3V0IHdoZXRoZXIgdGhleSBzaG91bGQgc3RhcnQgbmV3DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXN0bWVudHMsIGNvbnRpbnVlIHRoZWlyIFNJUHMsIG9yIHN0b3AgdGhlbSBhbHRvZ2V0aGVyLg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBOQVYgb2YgdGhlIFF1YW50IFNtYWxsIENhcCBGdW5kIGZlbGwgYnkgMC42NiUsIGV2ZW4gdGhvdWdoIHRoZWlyIGJlbmNobWFya3MNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZWFzZWQgYnkgMC4wMDkxJS4gU2ltaWxhcmx5LCB0aGUgTkFWIG9mIHRoZSBRdWFudCBNaWQgQ2FwIEZ1bmQgZGVjcmVhc2VkIGJ5DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMC45NCUsIHdoaWxlIHRoZWlyIGJlbmNobWFya3Mgcm9zZSBieSAwLjI0JS4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXaGF0IGlzIE5BViBpbiBNdXR1YWwgRnVuZHMgYW5kIFdoeSBJdCBNYXR0ZXJzID8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRUFEIFRIRSBGVUxMIEJMT0cNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMZXQncyBMZWFybiAhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2hhdCBJcyBBbiBGUE8_DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlBPIHN0YW5kcyBmb3IgRm9sbG93IG9uIFB1YmxpYyBPZmZlciwgaXMgYSBwcm9jZXNzIGJ5IHdoaWNoIHRoZSBjb21wYW55IGFscmVhZHkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZWQgb24gdGhlIHN0b2NrIGV4Y2hhbmdlIGlzc3VlcyBzaGFyZXMgdG8gdGhlIGV4aXN0aW5nIHNoYXJlaG9sZGVycyBvZiB0aGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW55IG9yIHRvIG5ldyBpbnZlc3RvcnMuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIHByaWNlIGlzIHNldCB0aHJvdWdoIHVuZGVyd3JpdGluZywgY29uc2lkZXJpbmcgbWFya2V0IGNvbmRpdGlvbnMsIHZhbHVhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgbmVnb3RpYXRpb25zLiBGUE8gc2hhcmUgcHJpY2luZyBkZXBlbmRzIG9uIGludmVzdG9yIGRlbWFuZCwgdGhlIGNvbXBhbnkncw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFuY2lhbCBwZXJmb3JtYW5jZSwgYW5kIG1hcmtldCBjb25kaXRpb25zLg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEEgcmVjZW50IGV4YW1wbGUgY2FuIGJlIFZvZGFmb25lIElkZWEncyBGb2xsb3ctb24gUHVibGljIE9mZmVyIChGUE8pIHdhcyBvcGVuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGJpZGRpbmcgZnJvbSBBcHJpbCAxOCB0byBBcHJpbCAyMi4gVGhlIHNoYXJlcyB3ZXJlIG9mZmVyZWQgYXQgYSBmaXhlZCBwcmljZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlIG9mIFJzIDEwLTExIHBlciBzaGFyZS4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMZWFybiBNb3JlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVXBjb21pbmcgV2ViaW5hcg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhvdyBPcHRpb25zIFRyYWRpbmcgQ2FuIFN1cGVyY2hhcmdlIFlvdXIgUk9JDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW4gdGhpcyB3ZWJpbmFyLCB5b3Ugd2lsbCBsZWFybiBob3cgdG8gY2hvb3NlIHRoZSByaWdodCBzdHJpa2UgcHJpY2UuIFlvdSdsbA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsc28gZGlzY292ZXIgaG93IHRvIHRpbWUgeW91ciBlbnRyeSBhbmQgZXhpdCBmcm9tIHRyYWRlcyB1c2luZyB0aGUgR2FubiBudW1iZXIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT0kgQ3Jvc3NvdmVycywgYW5kIE1BQ0Qgc3RyYXRlZ3kuIEFkZGl0aW9uYWxseSwgeW91J2xsIGxlYXJuIGhvdyB0byB0cmFkZSBpbiB0aGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNoIG1hcmtldCB1c2luZyBNYXJnaW4gVHJhZGluZyBGYWNpbGl0eSAoTVRGKS4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHRVQgTU9SRSBERVRBSUxTDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2Vla2x5IE1hcmtldCBVcGRhdGUgRm9yIFlvdQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5pZnR5IGFyb3VuZCAyNDAwMCAhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyB3ZWVrLCB0aGUgTmlmdHkgNTAgaXMgdXAgYnkgMiUgYW5kIGNsb3NlZCBuZWFyIDI0LDAwMC4gVGhlIG1vc3QgaW1wb3J0YW50DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VwcG9ydCBpcyAyMyw1MDAuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIEJhbmsgTmlmdHkgcm9zZSAxLjQlIHRoaXMgd2VlayBhbmQgY2xvc2VkIGFyb3VuZCA1Miw0MDAuIFRoZSBuZXh0IHJlc2lzdGFuY2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6b25lIGZvciB0aGUgQmFuayBOaWZ0eSBpcyBhcm91bmQgNTMsMDAwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIEluZGlhIFZpeCByb3NlIDQuOCUgdG8gdGhlIGxldmVsIG9mIDEzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhhdCdzIGFsbCBmb3Igbm93LiBTdGF5IFR1bmVkIHRvIFN0YXkgVXBkYXRlZOKApiBLZWVwIExlYXJuaW5nIQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvdyB1cyBvbiA6ICBDb3B5cmlnaHQgJmNvcHk7IDIwMjQgRWxlYXJubWFya2V0cy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTmVlZCBoZWxwIHdpdGggbGVhcm5pbmcNCiAgICAgICAgICAgICAgICBmaW5hbmNlPyBDYWxsIHVzIGF0ICArOTEtOTc0ODIyMjU1NSBJZiB5b3Ugbm8gbG9uZ2VyIHdpc2ggdG8NCiAgICAgICAgICAgICAgICByZWNlaXZlIGVtYWlsIG5vdGlmaWNhdGlvbnMgZnJvbQ0KICAgICAgICAgICAgICAgIEVsZWFybm1hcmtldHMsIENsaWNrIHRvICBVbnN1YnNjcmliZQ=="

// const Base64Decoder = (mailContent) => {
//     console.log(nodeBase64.decode(`${mailContent}`));
// };


// Base64Decoder(mailContent)



//text/html type email


const nodeBase64 = require('nodejs-base64-converter');

const mailContent = "PGh0bWw+PGJvZHk+SGV5IGxvdmUgaHRtbDwvYm9keT48L2h0bWw+"
const Base64Decoder = (mailContent) => {
    console.log(nodeBase64.decode(`${mailContent}`));
};

Base64Decoder(mailContent)
